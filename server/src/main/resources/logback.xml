<configuration debug="false">

    <statusListener class="ch.qos.logback.core.status.NopStatusListener" />

    <!-- A shutdown hook to properly finalize the logger system.
    In order to avoid race conditions between shutdown hooks
    (logs from another one won't be printed) there is a delay of
    1 seconds that allows other hooks to write logs. This will
    cause the process shutdown to be delayed with 1 second. -->
    <shutdownHook class="ch.qos.logback.core.hook.DelayingShutdownHook">
        <delay>1000</delay>
    </shutdownHook>

    <property name="pattern" value="[%date{ISO8601}] %cn [%-5level] [%-36.36logger{36}|%-44.44(%thread)] - %msg%n"/>


    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${application.home:-.}/logs/application.log</file>
        <triggeringPolicy class="com.hochgi.example.logic.util.log.StartupTriggeringPolicy"/>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- daily rollover with compression -->
            <fileNamePattern>${application.home:-.}/logs/application-log-%d{yyyy-MM-dd, UTC}.%i.gz</fileNamePattern>
            <!-- keep 1 week worth of history (max 2GB) with each file compressed after 10MB -->
            <maxFileSize>10MB</maxFileSize>
            <maxHistory>7</maxHistory>
            <totalSizeCap>2GB</totalSizeCap>
            <!-- in case of process terminating too early for rollover - do the rollover during start -->
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
        </rollingPolicy>
        <encoder>
            <pattern>${pattern}</pattern>
        </encoder>
        <immediateFlush>true</immediateFlush>
    </appender>

    <appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="FILE" />
        <maxFlushTime>0</maxFlushTime>
        <discardingThreshold>0</discardingThreshold>
    </appender>

    <appender name="SERVER_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${application.home:-.}/logs/server.log</file>
        <triggeringPolicy class="com.hochgi.example.logic.util.log.StartupTriggeringPolicy"/>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- daily rollover with compression -->
            <fileNamePattern>${application.home:-.}/logs/server-log-%d{yyyy-MM-dd, UTC}.%i.gz</fileNamePattern>
            <!-- keep 1 week worth of history (max 2GB) with each file compressed after 10MB -->
            <maxFileSize>10MB</maxFileSize>
            <maxHistory>7</maxHistory>
            <totalSizeCap>2GB</totalSizeCap>
            <!-- in case of process terminating too early for rollover - do the rollover during start -->
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
        </rollingPolicy>
        <encoder>
            <pattern>${pattern}</pattern>
        </encoder>
        <immediateFlush>true</immediateFlush>
    </appender>

    <appender name="ASYNC_SERVER_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="SERVER_FILE"/>
        <maxFlushTime>0</maxFlushTime>
        <discardingThreshold>0</discardingThreshold>
    </appender>

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>

    <appender name="ASYNC_CONSOLE" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="CONSOLE" />
        <maxFlushTime>0</maxFlushTime>
        <discardingThreshold>0</discardingThreshold>
    </appender>

    <appender name="AKKA_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${application.home:-.}/logs/akka.log</file>
        <triggeringPolicy class="com.hochgi.example.logic.util.log.StartupTriggeringPolicy"/>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- daily rollover with compression -->
            <fileNamePattern>logs/akka-log-%d{yyyy-MM-dd, UTC}.%i.gz</fileNamePattern>
            <!-- keep 1 week worth of history (max 2GB) with each file compressed after 10MB -->
            <maxFileSize>10MB</maxFileSize>
            <maxHistory>7</maxHistory>
            <totalSizeCap>2GB</totalSizeCap>
            <!-- in case of process terminating too early for rollover - do the rollover during start -->
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
        </rollingPolicy>
        <encoder>
            <pattern>[%date{ISO8601}] [%-5level] [%thread %X{sourceThread}] %logger{36} %X{sourceActorSystem} %X{akkaSource} - %msg%n</pattern>
        </encoder>
        <immediateFlush>true</immediateFlush>
    </appender>

    <appender name="ASYNC_AKKA_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="AKKA_FILE" />
        <maxFlushTime>0</maxFlushTime>
        <discardingThreshold>0</discardingThreshold>
    </appender>

    <appender name="NOP" class="ch.qos.logback.core.helpers.NOPAppender"/>

    <logger name="akka" additivity="false">
        <appender-ref ref="${OVERRIDE_APPENDER:-ASYNC_AKKA_FILE}" />
    </logger>

    <root level="${log.level:-DEBUG}">
        <appender-ref ref="ASYNC_FILE"/>
        <appender-ref ref="${OVERRIDE_APPENDER:-NOP}"/>
    </root>

    <logger name="sttp.tapir.server" additivity="false">
        <appender-ref ref="${OVERRIDE_SERVER_APPENDER:-ASYNC_CONSOLE}"/>
        <appender-ref ref="ASYNC_SERVER_FILE"/>
    </logger>

</configuration>
